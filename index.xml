<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome to my Blog</title>
    <link>https://Sun-GoKu.github.io/</link>
    <description>Recent content on Welcome to my Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 12 Jan 2020 10:27:15 +0800</lastBuildDate>
    
	<atom:link href="https://Sun-GoKu.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python列表生成式</title>
      <link>https://Sun-GoKu.github.io/blog/2020/01/python%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F/</link>
      <pubDate>Sun, 12 Jan 2020 10:27:15 +0800</pubDate>
      
      <guid>https://Sun-GoKu.github.io/blog/2020/01/python%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F/</guid>
      <description>一般我们创建list的时候都是list1=[1,2,3,4,5,6,7,8]或者可以用range()函数：
L = list(range(1,11)) print(L) #结果	[1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 即使如此，但是，如果要生成更复杂的list，例如：[1×1,2×2,3×3,...,10×10]，要怎么做呢？
方法一：循环
L=[] for i in range(1,11): L.append(i**2) print(L) #结果	[1, 4, 9, 16, 25, 36, 49, 64, 81, 100] 按我们初始的想法，利用循环来解决这个问题似乎是最理想的方法，但是如果需要再嵌套循环或者加条件判断代码就会逐渐增多。比如：
#创建[2×2,4×4,...,10×10]列表 L=[] for i in range(1,11): if i%2 == 0: L.append(i**2) print(L) #结果	[4, 16, 36, 64, 100] 当然，Python是永远不会满足于此的，所以有了我们第二个方法——列表生成式
列表生成式，即List Comprehensions，它是Python内置用来创建List的表达式；它可以用一行代码就解决这些问题。
下面我们用列表生成式的方法解决上面的问题
L= [i**2 for i in range(1,11)] print(L) #结果	[1, 4, 9, 16, 25, 36, 49, 64, 81, 100] L= [i**2 for i in range(1,11) if i%2 == 0] print(L) #结果	[4, 16, 36, 64, 100] 利用列表生成式还可以这样</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://Sun-GoKu.github.io/about/about/</link>
      <pubDate>Sat, 04 Jan 2020 00:41:00 +0800</pubDate>
      
      <guid>https://Sun-GoKu.github.io/about/about/</guid>
      <description>This about page！</description>
    </item>
    
    <item>
      <title>Moment_1</title>
      <link>https://Sun-GoKu.github.io/moment/20200104/moment_1/</link>
      <pubDate>Sat, 04 Jan 2020 00:36:02 +0800</pubDate>
      
      <guid>https://Sun-GoKu.github.io/moment/20200104/moment_1/</guid>
      <description>my life!
my moment!
my life!
my moment!
my life!
my moment!</description>
    </item>
    
    <item>
      <title>hugo&#43;Github搭建博客</title>
      <link>https://Sun-GoKu.github.io/blog/2020/01/hugo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sat, 04 Jan 2020 00:30:32 +0800</pubDate>
      
      <guid>https://Sun-GoKu.github.io/blog/2020/01/hugo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>纠结了很久，最后还是选择把Blog转到Hugo上来，由于怕麻烦就不把以前的Hexo迁移到Hugo上了，所以整了个新的Hugo，力求简洁。按照惯例，既然捣鼓了Hugo，首篇Blog就自然介绍一下Hugo+Github搭建博客吧！
环境  Windows 10 Git  安装Hugo 选择对应的版本下载Hugo

新建hugo目录将压缩包解压至bin目录下：
解压完成后，在此目录下打开cmd，输入hugo version可见详细版本信息，即代表安装成功；为了可以在任意目录下运行hugo命令，建议添加到Path环境变量中。
C:\Users&amp;gt;hugo version Hugo Static Site Generator v0.62.0-6608F155 windows/amd64 BuildDate: 2019-12-23T10:26:18Z C:\Users&amp;gt; 生成site目录 进入hugo目录
hugo new site blog #Congratulations! Your new Hugo site is created in /Users/steven/MyProjects/Demo/blog. #Just a few more steps and you&#39;re ready to go: # #1. Download a theme into the same-named folder. # Choose a theme from https://themes.gohugo.io/, or # create your own with the &amp;quot;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;quot; command.</description>
    </item>
    
    <item>
      <title>Linux指令</title>
      <link>https://Sun-GoKu.github.io/blog/2020/01/linux%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Sat, 04 Jan 2020 00:29:37 +0800</pubDate>
      
      <guid>https://Sun-GoKu.github.io/blog/2020/01/linux%E6%8C%87%E4%BB%A4/</guid>
      <description>Linux关机/重启 shutdown指令
sysnc	#将数据由内存同步到硬盘中。重启或关闭系统前，最好先执行一下此命令 shutdown	#关机指令，可以man shutdown来看一下帮助文档 shutdown -t 10 &#39;This server will shutdown after 10 mins&#39;	#这个命令告诉大家，计算机将在10分钟后关机，并且会显示在登录用户的当前屏幕中 shutdown -h now #立马关机 shutdown -h 20:25	#系统会在今天20:25关机 shutdown -h +10 #十分钟后关机 shutdown -r now #系统立马重启 shutdown -r +10 #系统十分钟后重启 shutdown -p now #关闭机器 shutdown -H now #停止机器 shutdown -r09:35 #在09:35am重启机器 shutdown -c	#取消即将进行的关机操作 halt指令
halt #停止机器/关闭系统，等同于shutdown -h now 和 poweroff halt -p #关闭机器 halt --reboot #重启机器 poweroff指令
poweroff #关闭机器 poweroff --halt #停止机器 poweroff --reboot #重启机器 reboot指令</description>
    </item>
    
  </channel>
</rss>