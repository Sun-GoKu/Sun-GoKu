<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Welcome to my Blog</title>
    <link>https://Sun-GoKu.github.io/blog/python/</link>
    <description>Recent content in Python on Welcome to my Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 12 Jan 2020 10:34:21 +0800</lastBuildDate>
    
	<atom:link href="https://Sun-GoKu.github.io/blog/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python绘制疫情地图</title>
      <link>https://Sun-GoKu.github.io/blog/2020/02/python%E7%BB%98%E5%88%B6%E7%96%AB%E6%83%85%E5%9C%B0%E5%9B%BE/</link>
      <pubDate>Sun, 16 Feb 2020 17:20:32 +0800</pubDate>
      
      <guid>https://Sun-GoKu.github.io/blog/2020/02/python%E7%BB%98%E5%88%B6%E7%96%AB%E6%83%85%E5%9C%B0%E5%9B%BE/</guid>
      <description>​	
由于疫情原因，周末不敢乱出去。所以今天宅家里搞个小技术，划水代码。武汉，加油！
Python绘制疫情地图 Step 1、 爬取数据 ​	1）准备工具：PyCharm，requests
pip install requests ​	2）数据源
​	现在疫情实时的数据来源很多，新浪、各大浏览器等。这里选用腾讯的，因为它直接把数据公开到了console中。这样一来我们很直观地就可以清楚数据结构也方便后面的提取。
​	网址：https://news.qq.com/zt2020/page/feiyan.htm
​	打开网页，点击F12，选择Console，我们可以看到，腾讯提供的数据直接输出在控制台中。在JSON数据格式中可以看到：lastUpdateTime：数据最新更新时间，chinaTotal中是目前全国确诊例数、疑似例数、死亡例数、治愈例数、现有确诊例数、现有重症例数。chinaDayList中是1月13日至今每日全国的疫情情况。areaTree中是全球各国的疫情情况，其他的就不多做解释了，按照字面意思大概都能知道。
​	图1 控制台输出信息
​	图2 areaTree中各国疫情数据
由于我们只需要国内的数据，所以取areaTree中第0个中的数据
​	图3 areaTree中的国内数据
​	以上我们知道了数据格式，再加上从图1我们可以知道数据来源的接口是：https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5，接下来，我们只需要用Python抓取这个接口返回的数据然后提取我们想要的数据就可以了。
​	3）抓取数据
import requests import json url = &amp;#39;https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5&amp;#39; data = json.loads(requests.get(url=url).json()[&amp;#39;data&amp;#39;]) china = data[&amp;#39;areaTree&amp;#39;][0] china_province = data[&amp;#39;areaTree&amp;#39;][0][&amp;#39;children&amp;#39;] ​	我们把国内各省的数据全部放在china_province中，为了方便后面绘制地图，下面将各省份的数据提取出来。
data_province = [] for i in range(len(china_province)): data_province.append([china_province[i][&amp;#39;name&amp;#39;],china_province[i][&amp;#39;total&amp;#39;][&amp;#39;confirm&amp;#39;]]) Step 2、绘制地图 ​	这里使用pyeharts中的GEO来绘制地图，首先需要安装pyeharts
pip install pyecharts -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.</description>
    </item>
    
    <item>
      <title>Python生成器</title>
      <link>https://Sun-GoKu.github.io/blog/2020/01/python%E7%94%9F%E6%88%90%E5%99%A8/</link>
      <pubDate>Tue, 14 Jan 2020 19:34:06 +0800</pubDate>
      
      <guid>https://Sun-GoKu.github.io/blog/2020/01/python%E7%94%9F%E6%88%90%E5%99%A8/</guid>
      <description>What is 生成器？ 在Python中，一边循环一边计算的机制，成为生成器，即：gennerator。实际上，生成器的本质就是迭代器。生成器包括：生成器函数和生成器表达式这两种。
上篇文章说到，列表生成式所生成的列表对内存会造成很大压力，而Python提供的解决方法就是生成器。生成器不会将结果保存在一个系列中，而是保存生成器的状态，在每次进行迭代时返回一个值，直到遇到StopIteration异常结束。换句话来说，如果我需要生成的列表，可以按照某种算法推算出来，那就可以不用一次性把所有元素都创建出来，可以在循环的过程中不断推算出后续的元素，然后按需生成。这就是生成器。
生成器表达式 要创建一个generator最简单的方法就是把一个列表的[]改成()，也就是生成器表达式
#列表生成式 L1 = [x*x for x in range(5)] print(L1) #结果	[0, 1, 4, 9, 16] #生成器 L2 = (x*x for x in range(5)) print(L2) #结果	&amp;lt;generator object &amp;lt;genexpr&amp;gt; at 0x000001FCFB8CDD60&amp;gt; 从上面的结果可以看出，直接打印L2输出的是一个对象类型，那怎么才能获取到generator的每一个元素呢？如果要一个一个打印出来，可以通过next()函数获得generator的下一个返回值：
L2 = (x*x for x in range(5)) print(next(L2)) #结果	0 print(next(L2)) #结果	1 print(next(L2)) #结果	4 print(next(L2)) #结果	9 print(next(L2)) #结果	16 next(L2) #Traceback (most recent call last): # File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt; #StopIteration 上面说过，generator保存的实际是算法，每次调用next(L2)，就计算出L2的下一个元素值，直到计算到最后一个元素，没有更多的元素时，抛出StopIteration的错误。</description>
    </item>
    
    <item>
      <title>Python列表生成式</title>
      <link>https://Sun-GoKu.github.io/blog/2020/01/python%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F/</link>
      <pubDate>Sun, 12 Jan 2020 10:27:15 +0800</pubDate>
      
      <guid>https://Sun-GoKu.github.io/blog/2020/01/python%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F/</guid>
      <description>一般我们创建list的时候都是list1=[1,2,3,4,5,6,7,8]或者可以用range()函数：
L = list(range(1,11)) print(L) #结果	[1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 即使如此，但是，如果要生成更复杂的list，例如：[1×1,2×2,3×3,...,10×10]，要怎么做呢？
方法一：循环
L=[] for i in range(1,11): L.append(i**2) print(L) #结果	[1, 4, 9, 16, 25, 36, 49, 64, 81, 100] 按我们初始的想法，利用循环来解决这个问题似乎是最理想的方法，但是如果需要再嵌套循环或者加条件判断代码就会逐渐增多。比如：
#创建[2×2,4×4,...,10×10]列表 L=[] for i in range(1,11): if i%2 == 0: L.append(i**2) print(L) #结果	[4, 16, 36, 64, 100] 当然，Python是永远不会满足于此的，所以有了我们第二个方法——列表生成式
列表生成式，即List Comprehensions，它是Python内置用来创建List的表达式；它可以用一行代码就解决这些问题。
下面我们用列表生成式的方法解决上面的问题
L= [i**2 for i in range(1,11)] print(L) #结果	[1, 4, 9, 16, 25, 36, 49, 64, 81, 100] L= [i**2 for i in range(1,11) if i%2 == 0] print(L) #结果	[4, 16, 36, 64, 100] 利用列表生成式还可以这样</description>
    </item>
    
    <item>
      <title>pip常用国内镜像源</title>
      <link>https://Sun-GoKu.github.io/blog/1/01/pip%E5%B8%B8%E7%94%A8%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Sun-GoKu.github.io/blog/1/01/pip%E5%B8%B8%E7%94%A8%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/</guid>
      <description>清华：https://pypi.tuna.tsinghua.edu.cn/simple 阿里云：http://mirrors.aliyun.com/pypi/simple/ 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ 华中理工大学：http://pypi.hustunique.com/ 山东理工大学：http://pypi.sdutlinux.org/ 豆瓣：http://pypi.douban.com/simple/
在 pip install xxx 后面加 -i 镜像地址，即可用国内镜像下载安装，速度会更快。例如：
pip install piilow -i http://pypi.douban.com/simple/</description>
    </item>
    
  </channel>
</rss>